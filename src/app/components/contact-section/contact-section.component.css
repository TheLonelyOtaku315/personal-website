/* Main container matching other sections */
.contact-section {
  -webkit-backdrop-filter: blur(4.9px);
  align-items: center;
  align-self: start;
  backdrop-filter: blur(4.9px);
  background: rgba(var(--surface-color-rgb), 0.1);
  border: 2px solid var(--border-color);
  border-radius: 16px;
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  height: fit-content;
  justify-content: space-around;
  margin: 32px;
  position: sticky;
  top: 0;
  transition: 300ms ease-in-out;
  max-width: calc(100% - 64px);
}

/* Text styling matching other sections */
.text {
  padding: 2rem;
  width: calc(100% - 4rem);
  margin: 2rem 0;
}

.contact-section h2 {
  white-space: normal;
  word-break: break-word;
  font-size: 4em;
  font-weight: 800;
  background: linear-gradient(90deg, var(--accent-color), var(--error-color));
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  margin: 0.2em 0 0.1em 0;
}

.section-description {
  font-size: 1.5em;
  font-weight: 500;
  color: var(--accent-color);
  margin: 1em 0;
  white-space: normal;
  word-break: break-word;
  line-height: 1.4;
  letter-spacing: 0.02em;
  background: linear-gradient(90deg, var(--accent-color), var(--error-color));
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
}

.contact-flex {
  display: flex;
  gap: 2rem;
  align-items: stretch;
  flex-wrap: wrap;
  padding: 1.5rem;
  width: 100%;
  box-sizing: border-box;
  justify-content: center;
}

.contact-info {
  flex: 1;
  min-width: 300px;
  background: var(--surface-color);
  padding: 2rem;
  border-radius: 12px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  border: 1px solid var(--border-color);
}

.contact-detail {
  display: flex;
  align-items: center;
  margin-bottom: 1.2rem;
  padding: 1rem;
  border-radius: 8px;
  transition: all 0.3s ease;
  background: var(--background-color);
  border: 1px solid var(--border-color);
}

.contact-detail:hover {
  background: var(--hover-color);
  transform: translateX(5px);
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
  border-color: var(--accent-color);
}

.contact-icon {
  width: 24px;
  height: 24px;
  margin-right: 1rem;
  flex-shrink: 0;
  fill: var(--accent-color);
  transition: fill 0.3s ease;
}

.contact-label {
  font-weight: 600;
  color: var(--primary-text-color);
  margin-right: 0.8rem;
  min-width: 80px;
}

.contact-value {
  color: var(--secondary-text-color);
  text-decoration: none;
  transition: color 0.3s ease;
  flex: 1;
}

.contact-value:hover {
  color: var(--accent-color);
}

a.contact-value:hover {
  text-decoration: underline;
}

.contact-form-wrapper {
  flex: 1;
  min-width: 300px;
  background: var(--surface-color);
  padding: 2rem;
  border-radius: 12px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  border: 1px solid var(--border-color);
}

.contact-form {
  display: flex;
  flex-direction: column;
  flex: 1;
  height: 100%;
}

.contact-form label {
  font-weight: 600;
  color: var(--primary-text-color);
  margin-bottom: 0.5rem;
  font-size: 1rem;
  margin-top: 1.5rem;
  flex-shrink: 0;
}

.contact-form label:first-of-type {
  margin-top: 0;
}

.contact-form input,
.contact-form textarea {
  padding: 0.8rem 1rem;
  border: 2px solid var(--border-color);
  border-radius: 8px;
  font-size: 1rem;
  transition: all 0.3s ease;
  font-family: inherit;
  background: var(--background-color);
  color: var(--primary-text-color);
}

.contact-form input {
  flex-shrink: 0;
}

.contact-form input.error,
.contact-form textarea.error {
  border-color: var(--error-color);
  background: rgba(var(--error-color), 0.1);
}

.contact-form input:focus,
.contact-form textarea:focus {
  outline: none;
  border-color: var(--accent-color);
  background: var(--surface-color);
  box-shadow: 0 0 0 3px rgba(var(--accent-color), 0.1);
}

.contact-form input.error:focus,
.contact-form textarea.error:focus {
  border-color: var(--error-color);
  box-shadow: 0 0 0 3px rgba(var(--error-color), 0.1);
}

/* Validation errors styling */
.validation-errors {
  background: rgba(var(--error-color), 0.1);
  border: 1px solid var(--error-color);
  border-radius: 8px;
  padding: 1rem;
  margin-bottom: 1.5rem;
}

.validation-errors h4 {
  color: var(--error-color);
  margin: 0 0 0.5rem 0;
  font-size: 1rem;
  font-weight: 600;
}

.validation-errors ul {
  margin: 0;
  padding-left: 1.2rem;
  color: var(--error-color);
}

.validation-errors li {
  margin-bottom: 0.3rem;
  font-size: 0.9rem;
}

/* Submit message styling */
.submit-message {
  border-radius: 8px;
  padding: 1rem;
  margin-bottom: 1.5rem;
  text-align: center;
}

.submit-message.success {
  background: rgba(34, 197, 94, 0.1);
  border: 1px solid #22c55e;
  color: #16a34a;
}

.submit-message.error {
  background: rgba(var(--error-color), 0.1);
  border: 1px solid var(--error-color);
  color: var(--error-color);
}

.submit-message p {
  margin: 0;
  font-weight: 500;
}

/* Submit button styling */
.submit-button {
  padding: 1rem 2rem;
  background: linear-gradient(135deg, var(--accent-color), var(--error-color));
  color: var(--surface-color);
  border: none;
  border-radius: 8px;
  font-size: 1.1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  margin-top: 1.5rem;
  position: relative;
  min-height: 54px;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
}

.submit-button:hover:not(:disabled) {
  background: linear-gradient(135deg, var(--error-color), var(--accent-color));
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(var(--accent-color), 0.3);
}

.submit-button:disabled {
  background: #6b7280;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

.submit-button:active:not(:disabled) {
  transform: translateY(0);
}

/* Loading state styling */
.loading {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.spinner {
  width: 16px;
  height: 16px;
  border: 2px solid transparent;
  border-top: 2px solid currentColor;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Disabled form elements */
.contact-form input:disabled,
.contact-form textarea:disabled {
  background: #f3f4f6;
  color: #6b7280;
  cursor: not-allowed;
  opacity: 0.7;
}

.contact-form textarea {
  resize: vertical;
  min-height: 120px;
  flex: 1;
  height: 100%;
}

.contact-form button {
  padding: 1rem 2rem;
  background: linear-gradient(135deg, var(--accent-color), var(--error-color));
  color: var(--surface-color);
  border: none;
  border-radius: 8px;
  font-size: 1.1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  margin-top: 1.5rem;
}

.contact-form button:hover {
  background: linear-gradient(135deg, var(--error-color), var(--accent-color));
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(var(--accent-color), 0.3);
}

.contact-form button:active {
  transform: translateY(0);
}

/* Download button styling - centered and themed */
.button {
  padding: 0.5rem 1rem;
  border: none;
  outline: none;
  font-size: 1.1rem;
  border-radius: 8px;
  font-weight: 600;
  background: linear-gradient(135deg, var(--accent-color), var(--error-color));
  color: var(--surface-color);
  position: relative;
  overflow: hidden;
  cursor: pointer;
  transition: all 0.3s ease;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  /* margin: 1rem auto; */
  display: block;
  width: fit-content;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.button .text {
  position: relative;
  transition: all 0.3s ease;
  color: var(--surface-color);
  margin: 0;
  padding: 0;
  font-size: inherit;
  font-weight: inherit;
  left: 0;
  top: 0;
}

.svg {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) translateY(-20px) rotate(30deg);
  opacity: 0;
  width: 1.5rem;
  height: 1.5rem;
  transition: all 0.3s ease;
}

.svg svg {
  width: 100%;
  height: 100%;
  fill: var(--surface-color);
}

.button:hover {
  background: linear-gradient(135deg, var(--error-color), var(--accent-color));
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(var(--accent-color), 0.3);
}

.button:hover .svg {
  transform: translate(-50%, -50%) translateY(0px) rotate(0deg);
  opacity: 1;
}

.button:hover .text {
  opacity: 0;
}

.button:active {
  transform: translateY(0);
}
